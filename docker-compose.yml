version: '3.9'

services:

  mongo:
    image: mongo:latest
    container_name: MongoDB
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - students-network
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8088:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    networks:
      - students-network

  rabbitmq:
    image: rabbitmq:management
    container_name: RabbitMQ
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - students-network

  redis:
    image: redis:latest
    container_name: Redis
    ports:
      - "6379:6379"
    networks:
      - students-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: Elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
    environment:
      discovery.type: single-node
      xpack.security.enrollment.enabled: "true"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    networks:
      - students-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: Kibana
    environment:
      - 'ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]'
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - students-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.0
    container_name: Logstash
    ports:
      - "5044:5044"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch
    networks:
      - students-network

  prometheus:
    image: prom/prometheus
    container_name: Prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - students-network

  grafana:
    image: grafana/grafana-enterprise
    container_name: Grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - students-network
    depends_on:
      - prometheus
networks:
  students-network:

volumes:
  mongo-data: